task 'merb:check_outside_merb_dir' do
  require("fileutils")
  unless File.exists?("merb") then
    puts("Error : Can't see 'merb' dir.  Are you in the right place?  You should be in the parent dir of 'merb'.")
    exit
  end
end

desc 'Install merb-core, merb-more, and merb-plugins'
task 'merb:install:all', :needs => [ 'merb:check_outside_merb_dir', 'merb:install:core', 'merb:install:more', 'merb:install:plugins' ] do
  # do nothing
end

desc 'Clone/Update all Merb repos. Will put them in the "merb" dir.'
task 'merb:clone' do
  require("fileutils")
  if File.exists?("../merb") then
    puts("Error : You appear to be running this from inside an existing 'merb' dir...  Run from OUTSIDE...")
    exit
  end
  unless File.exists?("merb") then
    puts("Creating merb dir...")
    mkdir("merb")
  end
  cd("merb")
  ["extlib", "core", "more", "plugins"].each do |r|
    if File.exists?("merb-#{r}") then
      puts("\nmerb-#{r} repos exists! Updating instead of cloning...")
      cd("merb-#{r}")
      sh("git fetch")
      sh("git checkout master")
      sh("git rebase origin/master")
      cd("..")
    else
      puts("\nCloning merb-#{r} repos...")
      sh("git clone git://github.com/wycats/merb-#{r}.git")
    end
  end
  cd("..")
end

desc 'Update clones of local Merb repos.  Run from OUTSIDE "merb" parent dir.'
task 'merb:update', :needs => [ 'merb:check_outside_merb_dir', 'merb:clone' ] do

end

desc 'Uninstall all RubyGems related to Merb'
task 'merb:gems:wipe' do
  windows = PLATFORM =~ /win32|cygwin/ rescue nil
  sudo = windows ? ("") : ("sudo")
  ["merb", "merb-extlib", "merb-core", "merb-more", "merb-action-args", "merb-assets", "merb-builder", "merb-cache", "merb-freezer", "merb-gen", "merb-haml", "merb-mailer", "merb-parts", "merb_activerecord", "merb_helpers", "merb_sequel", "merb_param_protection", "merb_test_unit", "merb_stories"].each do |gem|
    sh("#{sudo} gem uninstall #{gem} --all --ignore-dependencies --executables; true")
  end
end

desc 'Pull fresh copies of Merb, uninstall existing gems, and re-install all the gems'
task 'merb:gems:refresh', :needs => [ 'merb:check_outside_merb_dir', 'merb:update', 'merb:gems:wipe', 'merb:install:all' ] do

end

desc 'Install merb-core and merb-extlib'
task 'merb:install:core' do
  puts("\nInstalling merb-more and merb-extlib...")
  ["extlib", "core"].each do |repos|
    sh("cd merb/merb-#{repos} && rake install && cd ../..")
  end
end

desc 'Install merb-more'
task 'merb:install:more' do
  puts("\nInstalling merb-more...")
  sh("cd merb/merb-more && rake install && cd ../..")
end

desc 'Install merb-plugins'
task 'merb:install:plugins' do
  puts("\nInstalling merb-plugins...")
  sh("cd merb/merb-plugins && rake install && cd ../..")
end

desc 'Remove and reinstall Merb sake recipes'
task 'merb:sake:refresh', :needs => [ 'merb:sake:uninstall' ] do
  puts("\nInstalling merb-dev sake tasks...")
  sh("sake -i http://merbivore.com/merb-dev.sake")
end

desc 'Remove all merb:* sake tasks. Including this one.'
task 'merb:sake:uninstall' do
  puts("\nUninstalling merb-dev sake tasks...")
  sh("sake -u merb:check_outside_merb_dir merb:gems:wipe merb:clone merb:gems:refresh merb:install merb:install:all merb:install:core merb:install:more merb:install:plugins merb:sake:refresh merb:update merb:sake:uninstall")
end
